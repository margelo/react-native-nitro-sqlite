///
/// HybridSelectQueryResultSpec.hpp
/// Wed Sep 11 2024
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#pragma once

#if __has_include(<NitroModules/HybridObject.hpp>)
#include <NitroModules/HybridObject.hpp>
#else
#error NitroModules cannot be found! Are you sure you installed NitroModules properly?
#endif

// Forward declaration of `ArrayBuffer` to properly resolve imports.
namespace NitroModules { class ArrayBuffer; }
// Forward declaration of `HybridColumnMetadataSpec` to properly resolve imports.
namespace margelo::nitro::rnquicksqlite { class HybridColumnMetadataSpec; }

#include <vector>
#include <unordered_map>
#include <string>
#include <variant>
#include <NitroModules/ArrayBuffer.hpp>
#include <memory>
#include "HybridColumnMetadataSpec.hpp"

namespace margelo::nitro::rnquicksqlite {

  using namespace margelo::nitro;

  /**
   * An abstract base class for `SelectQueryResult`
   * Inherit this class to create instances of `HybridSelectQueryResultSpec` in C++.
   * @example
   * ```cpp
   * class HybridSelectQueryResult: public HybridSelectQueryResultSpec {
   *   // ...
   * };
   * ```
   */
  class HybridSelectQueryResultSpec: public virtual HybridObject {
    public:
      // Constructor
      explicit HybridSelectQueryResultSpec(): HybridObject(TAG) { }

      // Destructor
      virtual ~HybridSelectQueryResultSpec() { }

    public:
      // Properties
      virtual std::vector<std::unordered_map<std::string, std::variant<std::string, double, int64_t, bool, std::shared_ptr<ArrayBuffer>>>> getResults() = 0;
      virtual void setResults(const std::vector<std::unordered_map<std::string, std::variant<std::string, double, int64_t, bool, std::shared_ptr<ArrayBuffer>>>>& results) = 0;
      virtual std::unordered_map<std::string, std::shared_ptr<margelo::nitro::rnquicksqlite::HybridColumnMetadataSpec>> getMetadata() = 0;
      virtual void setMetadata(const std::unordered_map<std::string, std::shared_ptr<margelo::nitro::rnquicksqlite::HybridColumnMetadataSpec>>& metadata) = 0;

    public:
      // Methods
      

    protected:
      // Hybrid Setup
      void loadHybridMethods() override;

    protected:
      // Tag for logging
      static constexpr auto TAG = "SelectQueryResult";
  };

} // namespace margelo::nitro::rnquicksqlite
