///
/// HybridColumnMetadataSpec.hpp
/// Wed Sep 11 2024
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#pragma once

#if __has_include(<NitroModules/HybridObject.hpp>)
#include <NitroModules/HybridObject.hpp>
#else
#error NitroModules cannot be found! Are you sure you installed NitroModules properly?
#endif

// Forward declaration of `ColumnType` to properly resolve imports.
namespace margelo::nitro::rnquicksqlite { enum class ColumnType; }

#include <string>
#include "ColumnType.hpp"

namespace margelo::nitro::rnquicksqlite {

  using namespace margelo::nitro;

  /**
   * An abstract base class for `ColumnMetadata`
   * Inherit this class to create instances of `HybridColumnMetadataSpec` in C++.
   * @example
   * ```cpp
   * class HybridColumnMetadata: public HybridColumnMetadataSpec {
   *   // ...
   * };
   * ```
   */
  class HybridColumnMetadataSpec: public virtual HybridObject {
    public:
      // Constructor
      explicit HybridColumnMetadataSpec(): HybridObject(TAG) { }

      // Destructor
      virtual ~HybridColumnMetadataSpec() { }

    public:
      // Properties
      virtual std::string getName() = 0;
      virtual void setName(const std::string& name) = 0;
      virtual ColumnType getType() = 0;
      virtual void setType(ColumnType type) = 0;
      virtual double getIndex() = 0;
      virtual void setIndex(double index) = 0;

    public:
      // Methods
      

    protected:
      // Hybrid Setup
      void loadHybridMethods() override;

    protected:
      // Tag for logging
      static constexpr auto TAG = "ColumnMetadata";
  };

} // namespace margelo::nitro::rnquicksqlite
